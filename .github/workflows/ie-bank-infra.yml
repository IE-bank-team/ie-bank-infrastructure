name: ie-bank-infra

on: [push, workflow_dispatch]

env:
  RESOURCE_GROUP_DEV: aguadamillas_students_1
  RESOURCE_GROUP_UAT: aguadamillas_students_1
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  SUBSCRIPTION_ID_UAT: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: fivequys

  RESOURCE_GROUP: aguadamillas_students_1
  SUBSCRIPTION_ID: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  KEY_VAULT_SECRET_NAME_ACR_USERNAME: keyVaultSecretNameACRUsername
  KEY_VAULT_SECRET_NAME_ACR_PASSWORD: keyVaultSecretNameACRPassword1
  KEY_VAULT_NAME: fivequys-keyvault1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@main

        # Lint Bicep code
      - name: Run Bicep linter
        run: az bicep build --file ./main.bicep

  deploy-dev:
    #   if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Development"
    env:
      ENV: dev
      DBHOST: fivequys-dbsrv-dev.postgres.database.azure.com
      DBNAME: fivequys-db-dev
      FLASK_APP: app.py
      FLASK_DEBUG: 1

    steps:
      # Checkout code
      - uses: actions/checkout@main

        # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

        # Deploy Bicep file
      - name: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./main.bicep
          parameters: ./parameters/dev.parameters.json appServiceAPIEnvVarENV=${{ env.ENV }} appServiceAPIEnvVarDBHOST=${{ env.DBHOST }} appServiceAPIEnvVarDBNAME=${{ env.DBNAME }} appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ env.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ env.FLASK_DEBUG }}
          deploymentName: ${{ env.USER_ALIAS }}

  deploy-uat:
    #   if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs: [build, deploy-dev]
    environment:
      name: "User Acceptance Testing"
    env:
      ENV: uat
      DBHOST: fivequys-dbsrv-uat.postgres.database.azure.com
      DBNAME: fivequys-db-uat
      FLASK_APP: app.py
      FLASK_DEBUG: 1

    steps:
      # Checkout code
      - uses: actions/checkout@main

        # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

        # Deploy Bicep file
      - name: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_UAT }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
          template: ./main.bicep
          parameters: ./parameters/uat.parameters.json appServiceAPIEnvVarENV=${{ env.ENV }} appServiceAPIEnvVarDBHOST=${{ env.DBHOST }} appServiceAPIEnvVarDBNAME=${{ env.DBNAME }} appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ env.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ env.FLASK_DEBUG }}
          deploymentName: ${{ env.USER_ALIAS }}

  deploy-linuxcontainer:
    #    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@main

      - name: "Get docker registry credentials from Azure Key Vault"
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "REGISTRY_USERNAME=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_USERNAME }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV
            echo "REGISTRY_PASSWORD=$(az keyvault secret show --name ${{ env.KEY_VAULT_SECRET_NAME_ACR_PASSWORD }} --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV

      # login to Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      #Deploy Key Vault
      - name: deploy-key-vault
        uses: azure/arm-deploy@v1.0.9
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: ./key-vault.bicep
          parameters: ./key-vault.json
          deploymentName: "${{ env.USER_ALIAS }}-kv"
          failOnStdErr: false

      # Deploy Bicep file
      - name: deploy-main
        uses: azure/arm-deploy@v1.0.9
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: ./linuxcontainer.bicep
          parameters: ./parameters.json
          deploymentName: ${{ env.USER_ALIAS }}
          failOnStdErr: false
